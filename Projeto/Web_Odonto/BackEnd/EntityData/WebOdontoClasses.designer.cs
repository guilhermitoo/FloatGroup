#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BackEnd.EntityData
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="WebOdonto")]
	public partial class WebOdontoClassesDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Inserttratamento(tratamento instance);
    partial void Updatetratamento(tratamento instance);
    partial void Deletetratamento(tratamento instance);
    partial void Insertreceita(receita instance);
    partial void Updatereceita(receita instance);
    partial void Deletereceita(receita instance);
    partial void Insertprocedimento(procedimento instance);
    partial void Updateprocedimento(procedimento instance);
    partial void Deleteprocedimento(procedimento instance);
    partial void Insertpessoa(pessoa instance);
    partial void Updatepessoa(pessoa instance);
    partial void Deletepessoa(pessoa instance);
    partial void Insertpaciente(paciente instance);
    partial void Updatepaciente(paciente instance);
    partial void Deletepaciente(paciente instance);
    partial void Insertmedicamento(medicamento instance);
    partial void Updatemedicamento(medicamento instance);
    partial void Deletemedicamento(medicamento instance);
    partial void InsertitemTratamento(itemTratamento instance);
    partial void UpdateitemTratamento(itemTratamento instance);
    partial void DeleteitemTratamento(itemTratamento instance);
    partial void InsertitemReceita(itemReceita instance);
    partial void UpdateitemReceita(itemReceita instance);
    partial void DeleteitemReceita(itemReceita instance);
    partial void InsertitemAtendimento(itemAtendimento instance);
    partial void UpdateitemAtendimento(itemAtendimento instance);
    partial void DeleteitemAtendimento(itemAtendimento instance);
    partial void Insertimagem(imagem instance);
    partial void Updateimagem(imagem instance);
    partial void Deleteimagem(imagem instance);
    partial void Insertfuncionario(funcionario instance);
    partial void Updatefuncionario(funcionario instance);
    partial void Deletefuncionario(funcionario instance);
    partial void Insertdentista(dentista instance);
    partial void Updatedentista(dentista instance);
    partial void Deletedentista(dentista instance);
    partial void Insertconvenio(convenio instance);
    partial void Updateconvenio(convenio instance);
    partial void Deleteconvenio(convenio instance);
    partial void Insertcidade(cidade instance);
    partial void Updatecidade(cidade instance);
    partial void Deletecidade(cidade instance);
    partial void Insertavaliacao(avaliacao instance);
    partial void Updateavaliacao(avaliacao instance);
    partial void Deleteavaliacao(avaliacao instance);
    partial void Insertatendimento(atendimento instance);
    partial void Updateatendimento(atendimento instance);
    partial void Deleteatendimento(atendimento instance);
    #endregion
		
		public WebOdontoClassesDataContext() : 
				base(global::BackEnd.Properties.Settings.Default.WebOdontoConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public WebOdontoClassesDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public WebOdontoClassesDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public WebOdontoClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public WebOdontoClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<tratamento> tratamentos
		{
			get
			{
				return this.GetTable<tratamento>();
			}
		}
		
		public System.Data.Linq.Table<receita> receitas
		{
			get
			{
				return this.GetTable<receita>();
			}
		}
		
		public System.Data.Linq.Table<procedimento> procedimentos
		{
			get
			{
				return this.GetTable<procedimento>();
			}
		}
		
		public System.Data.Linq.Table<pessoa> pessoas
		{
			get
			{
				return this.GetTable<pessoa>();
			}
		}
		
		public System.Data.Linq.Table<paciente> pacientes
		{
			get
			{
				return this.GetTable<paciente>();
			}
		}
		
		public System.Data.Linq.Table<medicamento> medicamentos
		{
			get
			{
				return this.GetTable<medicamento>();
			}
		}
		
		public System.Data.Linq.Table<itemTratamento> itemTratamentos
		{
			get
			{
				return this.GetTable<itemTratamento>();
			}
		}
		
		public System.Data.Linq.Table<itemReceita> itemReceitas
		{
			get
			{
				return this.GetTable<itemReceita>();
			}
		}
		
		public System.Data.Linq.Table<itemAtendimento> itemAtendimentos
		{
			get
			{
				return this.GetTable<itemAtendimento>();
			}
		}
		
		public System.Data.Linq.Table<imagem> imagems
		{
			get
			{
				return this.GetTable<imagem>();
			}
		}
		
		public System.Data.Linq.Table<funcionario> funcionarios
		{
			get
			{
				return this.GetTable<funcionario>();
			}
		}
		
		public System.Data.Linq.Table<dentista> dentistas
		{
			get
			{
				return this.GetTable<dentista>();
			}
		}
		
		public System.Data.Linq.Table<convenio> convenios
		{
			get
			{
				return this.GetTable<convenio>();
			}
		}
		
		public System.Data.Linq.Table<cidade> cidades
		{
			get
			{
				return this.GetTable<cidade>();
			}
		}
		
		public System.Data.Linq.Table<avaliacao> avaliacaos
		{
			get
			{
				return this.GetTable<avaliacao>();
			}
		}
		
		public System.Data.Linq.Table<v_avaliacoe> v_avaliacoes
		{
			get
			{
				return this.GetTable<v_avaliacoe>();
			}
		}
		
		public System.Data.Linq.Table<v_cidade> v_cidades
		{
			get
			{
				return this.GetTable<v_cidade>();
			}
		}
		
		public System.Data.Linq.Table<v_convenio> v_convenios
		{
			get
			{
				return this.GetTable<v_convenio>();
			}
		}
		
		public System.Data.Linq.Table<v_dentista> v_dentistas
		{
			get
			{
				return this.GetTable<v_dentista>();
			}
		}
		
		public System.Data.Linq.Table<v_funcionario> v_funcionarios
		{
			get
			{
				return this.GetTable<v_funcionario>();
			}
		}
		
		public System.Data.Linq.Table<v_imagen> v_imagens
		{
			get
			{
				return this.GetTable<v_imagen>();
			}
		}
		
		public System.Data.Linq.Table<v_itensTratamento> v_itensTratamentos
		{
			get
			{
				return this.GetTable<v_itensTratamento>();
			}
		}
		
		public System.Data.Linq.Table<v_medicamento> v_medicamentos
		{
			get
			{
				return this.GetTable<v_medicamento>();
			}
		}
		
		public System.Data.Linq.Table<v_paciente> v_pacientes
		{
			get
			{
				return this.GetTable<v_paciente>();
			}
		}
		
		public System.Data.Linq.Table<v_pessoa> v_pessoas
		{
			get
			{
				return this.GetTable<v_pessoa>();
			}
		}
		
		public System.Data.Linq.Table<v_procedimento> v_procedimentos
		{
			get
			{
				return this.GetTable<v_procedimento>();
			}
		}
		
		public System.Data.Linq.Table<v_tratamento> v_tratamentos
		{
			get
			{
				return this.GetTable<v_tratamento>();
			}
		}
		
		public System.Data.Linq.Table<atendimento> atendimentos
		{
			get
			{
				return this.GetTable<atendimento>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.alteraAvaliacao")]
		public int alteraAvaliacao([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> data, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> dentista_id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> paciente_id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, data, dentista_id, paciente_id);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.alteraCidade")]
		public int alteraCidade([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(30)")] string nome, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Char(2)")] string uf)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, nome, uf);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.alteraConvenio")]
		public int alteraConvenio([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(20)")] string cnpj, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(20)")] string ie, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(100)")] string razao_social, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(100)")] string nome_fantasia)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, cnpj, ie, razao_social, nome_fantasia);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.alteraDentista")]
		public int alteraDentista([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> pessoa_id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(20)")] string cro, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Decimal(15,2)")] System.Nullable<decimal> salario)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), pessoa_id, cro, salario);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.alteraFuncionario")]
		public int alteraFuncionario([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> pessoa_id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Decimal(15,2)")] System.Nullable<decimal> salario, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string cargo)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), pessoa_id, salario, cargo);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.alteraImagem")]
		public int alteraImagem([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> paciente_id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string descricao, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(MAX)")] string arquivo)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, paciente_id, descricao, arquivo);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.alteraItemAtendimento")]
		public int alteraItemAtendimento([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> atendimento_id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> procedimento_id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> qtd)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), atendimento_id, procedimento_id, qtd);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.alteraItemReceita")]
		public int alteraItemReceita([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> receita_id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> medicamento_id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(10)")] string dose, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(100)")] string obs, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string periodo)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), receita_id, medicamento_id, dose, obs, periodo);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.alteraItemTratamento")]
		public int alteraItemTratamento([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> tratamento_id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> procedimento_id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> qtd, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Decimal(15,2)")] System.Nullable<decimal> valor, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> status)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), tratamento_id, procedimento_id, qtd, valor, status);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.alteraMedicamento")]
		public int alteraMedicamento([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(100)")] string nome, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string classe_terapeutica, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string tarja, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string posologia, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(10)")] string unidade)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, nome, classe_terapeutica, tarja, posologia, unidade);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.alteraPaciente")]
		public int alteraPaciente([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> pessoa_id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> convenio)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), pessoa_id, convenio);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.alteraPessoa")]
		public int alteraPessoa([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(100)")] string nome, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(15)")] string cpf, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(12)")] string rg, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Date")] System.Nullable<System.DateTime> nascimento, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(15)")] string telefone1, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(15)")] string telefone2, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Char(1)")] System.Nullable<char> sexo, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(100)")] string endereco, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(20)")] string usuario, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string senha, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> status, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(200)")] string obs, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> tipoUsuario, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> cidade_id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, nome, cpf, rg, nascimento, telefone1, telefone2, sexo, endereco, usuario, senha, status, obs, tipoUsuario, cidade_id);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.alteraProcedimento")]
		public int alteraProcedimento([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(80)")] string descricao)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, descricao);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.alteraReceita")]
		public int alteraReceita([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(200)")] string descricao, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> atendimento_id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, descricao, atendimento_id);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.alteraTratamento")]
		public int alteraTratamento([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> avaliacao_id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> status, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Date")] System.Nullable<System.DateTime> dataInicial, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Date")] System.Nullable<System.DateTime> dataFinal, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Decimal(15,2)")] System.Nullable<decimal> total)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), avaliacao_id, status, dataInicial, dataFinal, total);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.cadAvaliacao")]
		public int cadAvaliacao([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> data, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> dentista_id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> paciente_id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), data, dentista_id, paciente_id);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.cadCidade")]
		public int cadCidade([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(30)")] string nome, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Char(2)")] string uf)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), nome, uf);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.cadConvenio")]
		public int cadConvenio([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(20)")] string cnpj, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(20)")] string ie, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(100)")] string razao_social, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(100)")] string nome_fantasia)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), cnpj, ie, razao_social, nome_fantasia);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.cadDentista")]
		public int cadDentista([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> pessoa_id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(20)")] string cro, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Decimal(15,2)")] System.Nullable<decimal> salario)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), pessoa_id, cro, salario);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.cadFuncionario")]
		public int cadFuncionario([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> pessoa_id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Decimal(15,2)")] System.Nullable<decimal> salario, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string cargo)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), pessoa_id, salario, cargo);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.cadImagem")]
		public int cadImagem([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> paciente_id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string descricao, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(MAX)")] string arquivo)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), paciente_id, descricao, arquivo);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.cadItemAtendimento")]
		public int cadItemAtendimento([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> atendimento_id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> procedimento_id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> qtd)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), atendimento_id, procedimento_id, qtd);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.cadItemReceita")]
		public int cadItemReceita([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> receita_id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> medicamento_id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(10)")] string dose, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(100)")] string obs, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string periodo)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), receita_id, medicamento_id, dose, obs, periodo);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.cadItemTratamento")]
		public int cadItemTratamento([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> tratamento_id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> procedimento_id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> qtd, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Decimal(15,2)")] System.Nullable<decimal> valor, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> status)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), tratamento_id, procedimento_id, qtd, valor, status);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.cadMedicamento")]
		public int cadMedicamento([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(100)")] string nome, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string classe_terapeutica, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string tarja, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string posologia, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(10)")] string unidade)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), nome, classe_terapeutica, tarja, posologia, unidade);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.cadPaciente")]
		public int cadPaciente([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> pessoa_id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> convenio)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), pessoa_id, convenio);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.cadPessoa")]
		public int cadPessoa([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(100)")] string nome, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(15)")] string cpf, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(12)")] string rg, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Date")] System.Nullable<System.DateTime> nascimento, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(15)")] string telefone1, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(15)")] string telefone2, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Char(1)")] System.Nullable<char> sexo, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(100)")] string endereco, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(20)")] string usuario, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string senha, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> status, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(200)")] string obs, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> tipoUsuario, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> cidade_id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), nome, cpf, rg, nascimento, telefone1, telefone2, sexo, endereco, usuario, senha, status, obs, tipoUsuario, cidade_id);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.cadProcedimento")]
		public int cadProcedimento([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(80)")] string descricao)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), descricao);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.cadReceita")]
		public int cadReceita([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(200)")] string descricao, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> atendimento_id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), descricao, atendimento_id);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.cadTratamento")]
		public int cadTratamento([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> avaliacao_id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> status, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Date")] System.Nullable<System.DateTime> dataInicial, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Date")] System.Nullable<System.DateTime> dataFinal, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Decimal(15,2)")] System.Nullable<decimal> total)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), avaliacao_id, status, dataInicial, dataFinal, total);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.alteraAtendimento")]
		public int alteraAtendimento([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> data, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> status, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> dentista_id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> tratamento_id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, data, status, dentista_id, tratamento_id);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.cadAtendimento")]
		public int cadAtendimento([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> data, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> status, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> dentista_id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> tratamento_id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), data, status, dentista_id, tratamento_id);
			return ((int)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tratamentos")]
	public partial class tratamento : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _avaliacao_id;
		
		private int _status;
		
		private System.Nullable<System.DateTime> _dataInicial;
		
		private System.Nullable<System.DateTime> _dataFinal;
		
		private System.Nullable<decimal> _total;
		
		private EntitySet<itemTratamento> _itemTratamentos;
		
		private EntitySet<atendimento> _atendimentos;
		
		private EntityRef<avaliacao> _avaliacao;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onavaliacao_idChanging(int value);
    partial void Onavaliacao_idChanged();
    partial void OnstatusChanging(int value);
    partial void OnstatusChanged();
    partial void OndataInicialChanging(System.Nullable<System.DateTime> value);
    partial void OndataInicialChanged();
    partial void OndataFinalChanging(System.Nullable<System.DateTime> value);
    partial void OndataFinalChanged();
    partial void OntotalChanging(System.Nullable<decimal> value);
    partial void OntotalChanged();
    #endregion
		
		public tratamento()
		{
			this._itemTratamentos = new EntitySet<itemTratamento>(new Action<itemTratamento>(this.attach_itemTratamentos), new Action<itemTratamento>(this.detach_itemTratamentos));
			this._atendimentos = new EntitySet<atendimento>(new Action<atendimento>(this.attach_atendimentos), new Action<atendimento>(this.detach_atendimentos));
			this._avaliacao = default(EntityRef<avaliacao>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_avaliacao_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int avaliacao_id
		{
			get
			{
				return this._avaliacao_id;
			}
			set
			{
				if ((this._avaliacao_id != value))
				{
					if (this._avaliacao.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onavaliacao_idChanging(value);
					this.SendPropertyChanging();
					this._avaliacao_id = value;
					this.SendPropertyChanged("avaliacao_id");
					this.Onavaliacao_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="Int NOT NULL")]
		public int status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dataInicial", DbType="Date")]
		public System.Nullable<System.DateTime> dataInicial
		{
			get
			{
				return this._dataInicial;
			}
			set
			{
				if ((this._dataInicial != value))
				{
					this.OndataInicialChanging(value);
					this.SendPropertyChanging();
					this._dataInicial = value;
					this.SendPropertyChanged("dataInicial");
					this.OndataInicialChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dataFinal", DbType="Date")]
		public System.Nullable<System.DateTime> dataFinal
		{
			get
			{
				return this._dataFinal;
			}
			set
			{
				if ((this._dataFinal != value))
				{
					this.OndataFinalChanging(value);
					this.SendPropertyChanging();
					this._dataFinal = value;
					this.SendPropertyChanged("dataFinal");
					this.OndataFinalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_total", DbType="Decimal(15,2)")]
		public System.Nullable<decimal> total
		{
			get
			{
				return this._total;
			}
			set
			{
				if ((this._total != value))
				{
					this.OntotalChanging(value);
					this.SendPropertyChanging();
					this._total = value;
					this.SendPropertyChanged("total");
					this.OntotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tratamento_itemTratamento", Storage="_itemTratamentos", ThisKey="avaliacao_id", OtherKey="tratamento_id")]
		public EntitySet<itemTratamento> itemTratamentos
		{
			get
			{
				return this._itemTratamentos;
			}
			set
			{
				this._itemTratamentos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tratamento_atendimento1", Storage="_atendimentos", ThisKey="avaliacao_id", OtherKey="tratamento_id")]
		public EntitySet<atendimento> atendimentos
		{
			get
			{
				return this._atendimentos;
			}
			set
			{
				this._atendimentos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="avaliacao_tratamento", Storage="_avaliacao", ThisKey="avaliacao_id", OtherKey="id", IsForeignKey=true)]
		public avaliacao avaliacao
		{
			get
			{
				return this._avaliacao.Entity;
			}
			set
			{
				avaliacao previousValue = this._avaliacao.Entity;
				if (((previousValue != value) 
							|| (this._avaliacao.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._avaliacao.Entity = null;
						previousValue.tratamento = null;
					}
					this._avaliacao.Entity = value;
					if ((value != null))
					{
						value.tratamento = this;
						this._avaliacao_id = value.id;
					}
					else
					{
						this._avaliacao_id = default(int);
					}
					this.SendPropertyChanged("avaliacao");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_itemTratamentos(itemTratamento entity)
		{
			this.SendPropertyChanging();
			entity.tratamento = this;
		}
		
		private void detach_itemTratamentos(itemTratamento entity)
		{
			this.SendPropertyChanging();
			entity.tratamento = null;
		}
		
		private void attach_atendimentos(atendimento entity)
		{
			this.SendPropertyChanging();
			entity.tratamento = this;
		}
		
		private void detach_atendimentos(atendimento entity)
		{
			this.SendPropertyChanging();
			entity.tratamento = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.receitas")]
	public partial class receita : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _descricao;
		
		private int _atendimento_id;
		
		private EntitySet<itemReceita> _itemReceitas;
		
		private EntityRef<atendimento> _atendimento;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OndescricaoChanging(string value);
    partial void OndescricaoChanged();
    partial void Onatendimento_idChanging(int value);
    partial void Onatendimento_idChanged();
    #endregion
		
		public receita()
		{
			this._itemReceitas = new EntitySet<itemReceita>(new Action<itemReceita>(this.attach_itemReceitas), new Action<itemReceita>(this.detach_itemReceitas));
			this._atendimento = default(EntityRef<atendimento>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_descricao", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string descricao
		{
			get
			{
				return this._descricao;
			}
			set
			{
				if ((this._descricao != value))
				{
					this.OndescricaoChanging(value);
					this.SendPropertyChanging();
					this._descricao = value;
					this.SendPropertyChanged("descricao");
					this.OndescricaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_atendimento_id", DbType="Int NOT NULL")]
		public int atendimento_id
		{
			get
			{
				return this._atendimento_id;
			}
			set
			{
				if ((this._atendimento_id != value))
				{
					if (this._atendimento.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onatendimento_idChanging(value);
					this.SendPropertyChanging();
					this._atendimento_id = value;
					this.SendPropertyChanged("atendimento_id");
					this.Onatendimento_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="receita_itemReceita", Storage="_itemReceitas", ThisKey="id", OtherKey="receita_id")]
		public EntitySet<itemReceita> itemReceitas
		{
			get
			{
				return this._itemReceitas;
			}
			set
			{
				this._itemReceitas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="atendimento1_receita", Storage="_atendimento", ThisKey="atendimento_id", OtherKey="id", IsForeignKey=true)]
		public atendimento atendimento
		{
			get
			{
				return this._atendimento.Entity;
			}
			set
			{
				atendimento previousValue = this._atendimento.Entity;
				if (((previousValue != value) 
							|| (this._atendimento.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._atendimento.Entity = null;
						previousValue.receitas.Remove(this);
					}
					this._atendimento.Entity = value;
					if ((value != null))
					{
						value.receitas.Add(this);
						this._atendimento_id = value.id;
					}
					else
					{
						this._atendimento_id = default(int);
					}
					this.SendPropertyChanged("atendimento");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_itemReceitas(itemReceita entity)
		{
			this.SendPropertyChanging();
			entity.receita = this;
		}
		
		private void detach_itemReceitas(itemReceita entity)
		{
			this.SendPropertyChanging();
			entity.receita = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.procedimentos")]
	public partial class procedimento : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _descricao;
		
		private EntitySet<itemTratamento> _itemTratamentos;
		
		private EntitySet<itemAtendimento> _itemAtendimentos;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OndescricaoChanging(string value);
    partial void OndescricaoChanged();
    #endregion
		
		public procedimento()
		{
			this._itemTratamentos = new EntitySet<itemTratamento>(new Action<itemTratamento>(this.attach_itemTratamentos), new Action<itemTratamento>(this.detach_itemTratamentos));
			this._itemAtendimentos = new EntitySet<itemAtendimento>(new Action<itemAtendimento>(this.attach_itemAtendimentos), new Action<itemAtendimento>(this.detach_itemAtendimentos));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_descricao", DbType="VarChar(80) NOT NULL", CanBeNull=false)]
		public string descricao
		{
			get
			{
				return this._descricao;
			}
			set
			{
				if ((this._descricao != value))
				{
					this.OndescricaoChanging(value);
					this.SendPropertyChanging();
					this._descricao = value;
					this.SendPropertyChanged("descricao");
					this.OndescricaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="procedimento_itemTratamento", Storage="_itemTratamentos", ThisKey="id", OtherKey="procedimento_id")]
		public EntitySet<itemTratamento> itemTratamentos
		{
			get
			{
				return this._itemTratamentos;
			}
			set
			{
				this._itemTratamentos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="procedimento_itemAtendimento", Storage="_itemAtendimentos", ThisKey="id", OtherKey="procedimento_id")]
		public EntitySet<itemAtendimento> itemAtendimentos
		{
			get
			{
				return this._itemAtendimentos;
			}
			set
			{
				this._itemAtendimentos.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_itemTratamentos(itemTratamento entity)
		{
			this.SendPropertyChanging();
			entity.procedimento = this;
		}
		
		private void detach_itemTratamentos(itemTratamento entity)
		{
			this.SendPropertyChanging();
			entity.procedimento = null;
		}
		
		private void attach_itemAtendimentos(itemAtendimento entity)
		{
			this.SendPropertyChanging();
			entity.procedimento = this;
		}
		
		private void detach_itemAtendimentos(itemAtendimento entity)
		{
			this.SendPropertyChanging();
			entity.procedimento = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.pessoas")]
	public partial class pessoa : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _nome;
		
		private string _cpf;
		
		private string _rg;
		
		private System.Nullable<System.DateTime> _nascimento;
		
		private string _telefone1;
		
		private string _telefone2;
		
		private System.Nullable<char> _sexo;
		
		private string _endereco;
		
		private string _usuario;
		
		private string _senha;
		
		private int _status;
		
		private string _obs;
		
		private System.Nullable<int> _tipoUsuario;
		
		private System.Nullable<int> _cidade_id;
		
		private EntityRef<paciente> _paciente;
		
		private EntityRef<funcionario> _funcionario;
		
		private EntityRef<dentista> _dentista;
		
		private EntityRef<cidade> _cidade;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnomeChanging(string value);
    partial void OnnomeChanged();
    partial void OncpfChanging(string value);
    partial void OncpfChanged();
    partial void OnrgChanging(string value);
    partial void OnrgChanged();
    partial void OnnascimentoChanging(System.Nullable<System.DateTime> value);
    partial void OnnascimentoChanged();
    partial void Ontelefone1Changing(string value);
    partial void Ontelefone1Changed();
    partial void Ontelefone2Changing(string value);
    partial void Ontelefone2Changed();
    partial void OnsexoChanging(System.Nullable<char> value);
    partial void OnsexoChanged();
    partial void OnenderecoChanging(string value);
    partial void OnenderecoChanged();
    partial void OnusuarioChanging(string value);
    partial void OnusuarioChanged();
    partial void OnsenhaChanging(string value);
    partial void OnsenhaChanged();
    partial void OnstatusChanging(int value);
    partial void OnstatusChanged();
    partial void OnobsChanging(string value);
    partial void OnobsChanged();
    partial void OntipoUsuarioChanging(System.Nullable<int> value);
    partial void OntipoUsuarioChanged();
    partial void Oncidade_idChanging(System.Nullable<int> value);
    partial void Oncidade_idChanged();
    #endregion
		
		public pessoa()
		{
			this._paciente = default(EntityRef<paciente>);
			this._funcionario = default(EntityRef<funcionario>);
			this._dentista = default(EntityRef<dentista>);
			this._cidade = default(EntityRef<cidade>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nome", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string nome
		{
			get
			{
				return this._nome;
			}
			set
			{
				if ((this._nome != value))
				{
					this.OnnomeChanging(value);
					this.SendPropertyChanging();
					this._nome = value;
					this.SendPropertyChanged("nome");
					this.OnnomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cpf", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string cpf
		{
			get
			{
				return this._cpf;
			}
			set
			{
				if ((this._cpf != value))
				{
					this.OncpfChanging(value);
					this.SendPropertyChanging();
					this._cpf = value;
					this.SendPropertyChanged("cpf");
					this.OncpfChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rg", DbType="VarChar(12)")]
		public string rg
		{
			get
			{
				return this._rg;
			}
			set
			{
				if ((this._rg != value))
				{
					this.OnrgChanging(value);
					this.SendPropertyChanging();
					this._rg = value;
					this.SendPropertyChanged("rg");
					this.OnrgChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nascimento", DbType="Date")]
		public System.Nullable<System.DateTime> nascimento
		{
			get
			{
				return this._nascimento;
			}
			set
			{
				if ((this._nascimento != value))
				{
					this.OnnascimentoChanging(value);
					this.SendPropertyChanging();
					this._nascimento = value;
					this.SendPropertyChanged("nascimento");
					this.OnnascimentoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_telefone1", DbType="VarChar(15)")]
		public string telefone1
		{
			get
			{
				return this._telefone1;
			}
			set
			{
				if ((this._telefone1 != value))
				{
					this.Ontelefone1Changing(value);
					this.SendPropertyChanging();
					this._telefone1 = value;
					this.SendPropertyChanged("telefone1");
					this.Ontelefone1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_telefone2", DbType="VarChar(15)")]
		public string telefone2
		{
			get
			{
				return this._telefone2;
			}
			set
			{
				if ((this._telefone2 != value))
				{
					this.Ontelefone2Changing(value);
					this.SendPropertyChanging();
					this._telefone2 = value;
					this.SendPropertyChanged("telefone2");
					this.Ontelefone2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sexo", DbType="Char(1)")]
		public System.Nullable<char> sexo
		{
			get
			{
				return this._sexo;
			}
			set
			{
				if ((this._sexo != value))
				{
					this.OnsexoChanging(value);
					this.SendPropertyChanging();
					this._sexo = value;
					this.SendPropertyChanged("sexo");
					this.OnsexoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_endereco", DbType="VarChar(50)")]
		public string endereco
		{
			get
			{
				return this._endereco;
			}
			set
			{
				if ((this._endereco != value))
				{
					this.OnenderecoChanging(value);
					this.SendPropertyChanging();
					this._endereco = value;
					this.SendPropertyChanged("endereco");
					this.OnenderecoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_usuario", DbType="VarChar(20)")]
		public string usuario
		{
			get
			{
				return this._usuario;
			}
			set
			{
				if ((this._usuario != value))
				{
					this.OnusuarioChanging(value);
					this.SendPropertyChanging();
					this._usuario = value;
					this.SendPropertyChanged("usuario");
					this.OnusuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_senha", DbType="VarChar(50)")]
		public string senha
		{
			get
			{
				return this._senha;
			}
			set
			{
				if ((this._senha != value))
				{
					this.OnsenhaChanging(value);
					this.SendPropertyChanging();
					this._senha = value;
					this.SendPropertyChanged("senha");
					this.OnsenhaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="Int NOT NULL")]
		public int status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_obs", DbType="VarChar(200)")]
		public string obs
		{
			get
			{
				return this._obs;
			}
			set
			{
				if ((this._obs != value))
				{
					this.OnobsChanging(value);
					this.SendPropertyChanging();
					this._obs = value;
					this.SendPropertyChanged("obs");
					this.OnobsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tipoUsuario", DbType="Int")]
		public System.Nullable<int> tipoUsuario
		{
			get
			{
				return this._tipoUsuario;
			}
			set
			{
				if ((this._tipoUsuario != value))
				{
					this.OntipoUsuarioChanging(value);
					this.SendPropertyChanging();
					this._tipoUsuario = value;
					this.SendPropertyChanged("tipoUsuario");
					this.OntipoUsuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cidade_id", DbType="Int")]
		public System.Nullable<int> cidade_id
		{
			get
			{
				return this._cidade_id;
			}
			set
			{
				if ((this._cidade_id != value))
				{
					if (this._cidade.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncidade_idChanging(value);
					this.SendPropertyChanging();
					this._cidade_id = value;
					this.SendPropertyChanged("cidade_id");
					this.Oncidade_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="pessoa_paciente", Storage="_paciente", ThisKey="id", OtherKey="pessoa_id", IsUnique=true, IsForeignKey=false)]
		public paciente paciente
		{
			get
			{
				return this._paciente.Entity;
			}
			set
			{
				paciente previousValue = this._paciente.Entity;
				if (((previousValue != value) 
							|| (this._paciente.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._paciente.Entity = null;
						previousValue.pessoa = null;
					}
					this._paciente.Entity = value;
					if ((value != null))
					{
						value.pessoa = this;
					}
					this.SendPropertyChanged("paciente");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="pessoa_funcionario", Storage="_funcionario", ThisKey="id", OtherKey="pessoa_id", IsUnique=true, IsForeignKey=false)]
		public funcionario funcionario
		{
			get
			{
				return this._funcionario.Entity;
			}
			set
			{
				funcionario previousValue = this._funcionario.Entity;
				if (((previousValue != value) 
							|| (this._funcionario.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._funcionario.Entity = null;
						previousValue.pessoa = null;
					}
					this._funcionario.Entity = value;
					if ((value != null))
					{
						value.pessoa = this;
					}
					this.SendPropertyChanged("funcionario");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="pessoa_dentista", Storage="_dentista", ThisKey="id", OtherKey="pessoa_id", IsUnique=true, IsForeignKey=false)]
		public dentista dentista
		{
			get
			{
				return this._dentista.Entity;
			}
			set
			{
				dentista previousValue = this._dentista.Entity;
				if (((previousValue != value) 
							|| (this._dentista.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._dentista.Entity = null;
						previousValue.pessoa = null;
					}
					this._dentista.Entity = value;
					if ((value != null))
					{
						value.pessoa = this;
					}
					this.SendPropertyChanged("dentista");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="cidade_pessoa", Storage="_cidade", ThisKey="cidade_id", OtherKey="id", IsForeignKey=true)]
		public cidade cidade
		{
			get
			{
				return this._cidade.Entity;
			}
			set
			{
				cidade previousValue = this._cidade.Entity;
				if (((previousValue != value) 
							|| (this._cidade.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._cidade.Entity = null;
						previousValue.pessoas.Remove(this);
					}
					this._cidade.Entity = value;
					if ((value != null))
					{
						value.pessoas.Add(this);
						this._cidade_id = value.id;
					}
					else
					{
						this._cidade_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("cidade");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.pacientes")]
	public partial class paciente : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _pessoa_id;
		
		private System.Nullable<int> _convenio_id;
		
		private EntitySet<imagem> _imagems;
		
		private EntitySet<avaliacao> _avaliacaos;
		
		private EntityRef<pessoa> _pessoa;
		
		private EntityRef<convenio> _convenio;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onpessoa_idChanging(int value);
    partial void Onpessoa_idChanged();
    partial void Onconvenio_idChanging(System.Nullable<int> value);
    partial void Onconvenio_idChanged();
    #endregion
		
		public paciente()
		{
			this._imagems = new EntitySet<imagem>(new Action<imagem>(this.attach_imagems), new Action<imagem>(this.detach_imagems));
			this._avaliacaos = new EntitySet<avaliacao>(new Action<avaliacao>(this.attach_avaliacaos), new Action<avaliacao>(this.detach_avaliacaos));
			this._pessoa = default(EntityRef<pessoa>);
			this._convenio = default(EntityRef<convenio>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pessoa_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int pessoa_id
		{
			get
			{
				return this._pessoa_id;
			}
			set
			{
				if ((this._pessoa_id != value))
				{
					if (this._pessoa.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onpessoa_idChanging(value);
					this.SendPropertyChanging();
					this._pessoa_id = value;
					this.SendPropertyChanged("pessoa_id");
					this.Onpessoa_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_convenio_id", DbType="Int")]
		public System.Nullable<int> convenio_id
		{
			get
			{
				return this._convenio_id;
			}
			set
			{
				if ((this._convenio_id != value))
				{
					if (this._convenio.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onconvenio_idChanging(value);
					this.SendPropertyChanging();
					this._convenio_id = value;
					this.SendPropertyChanged("convenio_id");
					this.Onconvenio_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="paciente_imagem", Storage="_imagems", ThisKey="pessoa_id", OtherKey="paciente_id")]
		public EntitySet<imagem> imagems
		{
			get
			{
				return this._imagems;
			}
			set
			{
				this._imagems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="paciente_avaliacao", Storage="_avaliacaos", ThisKey="pessoa_id", OtherKey="paciente_id")]
		public EntitySet<avaliacao> avaliacaos
		{
			get
			{
				return this._avaliacaos;
			}
			set
			{
				this._avaliacaos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="pessoa_paciente", Storage="_pessoa", ThisKey="pessoa_id", OtherKey="id", IsForeignKey=true)]
		public pessoa pessoa
		{
			get
			{
				return this._pessoa.Entity;
			}
			set
			{
				pessoa previousValue = this._pessoa.Entity;
				if (((previousValue != value) 
							|| (this._pessoa.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._pessoa.Entity = null;
						previousValue.paciente = null;
					}
					this._pessoa.Entity = value;
					if ((value != null))
					{
						value.paciente = this;
						this._pessoa_id = value.id;
					}
					else
					{
						this._pessoa_id = default(int);
					}
					this.SendPropertyChanged("pessoa");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="convenio_paciente", Storage="_convenio", ThisKey="convenio_id", OtherKey="id", IsForeignKey=true)]
		public convenio convenio
		{
			get
			{
				return this._convenio.Entity;
			}
			set
			{
				convenio previousValue = this._convenio.Entity;
				if (((previousValue != value) 
							|| (this._convenio.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._convenio.Entity = null;
						previousValue.pacientes.Remove(this);
					}
					this._convenio.Entity = value;
					if ((value != null))
					{
						value.pacientes.Add(this);
						this._convenio_id = value.id;
					}
					else
					{
						this._convenio_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("convenio");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_imagems(imagem entity)
		{
			this.SendPropertyChanging();
			entity.paciente = this;
		}
		
		private void detach_imagems(imagem entity)
		{
			this.SendPropertyChanging();
			entity.paciente = null;
		}
		
		private void attach_avaliacaos(avaliacao entity)
		{
			this.SendPropertyChanging();
			entity.paciente = this;
		}
		
		private void detach_avaliacaos(avaliacao entity)
		{
			this.SendPropertyChanging();
			entity.paciente = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.medicamentos")]
	public partial class medicamento : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _nome;
		
		private string _classe_terapeutica;
		
		private string _tarja;
		
		private string _posologia;
		
		private string _unidade;
		
		private EntitySet<itemReceita> _itemReceitas;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnomeChanging(string value);
    partial void OnnomeChanged();
    partial void Onclasse_terapeuticaChanging(string value);
    partial void Onclasse_terapeuticaChanged();
    partial void OntarjaChanging(string value);
    partial void OntarjaChanged();
    partial void OnposologiaChanging(string value);
    partial void OnposologiaChanged();
    partial void OnunidadeChanging(string value);
    partial void OnunidadeChanged();
    #endregion
		
		public medicamento()
		{
			this._itemReceitas = new EntitySet<itemReceita>(new Action<itemReceita>(this.attach_itemReceitas), new Action<itemReceita>(this.detach_itemReceitas));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nome", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string nome
		{
			get
			{
				return this._nome;
			}
			set
			{
				if ((this._nome != value))
				{
					this.OnnomeChanging(value);
					this.SendPropertyChanging();
					this._nome = value;
					this.SendPropertyChanged("nome");
					this.OnnomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_classe_terapeutica", DbType="VarChar(50)")]
		public string classe_terapeutica
		{
			get
			{
				return this._classe_terapeutica;
			}
			set
			{
				if ((this._classe_terapeutica != value))
				{
					this.Onclasse_terapeuticaChanging(value);
					this.SendPropertyChanging();
					this._classe_terapeutica = value;
					this.SendPropertyChanged("classe_terapeutica");
					this.Onclasse_terapeuticaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tarja", DbType="VarChar(50)")]
		public string tarja
		{
			get
			{
				return this._tarja;
			}
			set
			{
				if ((this._tarja != value))
				{
					this.OntarjaChanging(value);
					this.SendPropertyChanging();
					this._tarja = value;
					this.SendPropertyChanged("tarja");
					this.OntarjaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_posologia", DbType="VarChar(50)")]
		public string posologia
		{
			get
			{
				return this._posologia;
			}
			set
			{
				if ((this._posologia != value))
				{
					this.OnposologiaChanging(value);
					this.SendPropertyChanging();
					this._posologia = value;
					this.SendPropertyChanged("posologia");
					this.OnposologiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_unidade", DbType="VarChar(10)")]
		public string unidade
		{
			get
			{
				return this._unidade;
			}
			set
			{
				if ((this._unidade != value))
				{
					this.OnunidadeChanging(value);
					this.SendPropertyChanging();
					this._unidade = value;
					this.SendPropertyChanged("unidade");
					this.OnunidadeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="medicamento_itemReceita", Storage="_itemReceitas", ThisKey="id", OtherKey="medicamento_id")]
		public EntitySet<itemReceita> itemReceitas
		{
			get
			{
				return this._itemReceitas;
			}
			set
			{
				this._itemReceitas.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_itemReceitas(itemReceita entity)
		{
			this.SendPropertyChanging();
			entity.medicamento = this;
		}
		
		private void detach_itemReceitas(itemReceita entity)
		{
			this.SendPropertyChanging();
			entity.medicamento = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.itensTratamento")]
	public partial class itemTratamento : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _tratamento_id;
		
		private int _procedimento_id;
		
		private int _qtd;
		
		private System.Nullable<decimal> _valor;
		
		private int _status;
		
		private EntityRef<procedimento> _procedimento;
		
		private EntityRef<tratamento> _tratamento;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Ontratamento_idChanging(int value);
    partial void Ontratamento_idChanged();
    partial void Onprocedimento_idChanging(int value);
    partial void Onprocedimento_idChanged();
    partial void OnqtdChanging(int value);
    partial void OnqtdChanged();
    partial void OnvalorChanging(System.Nullable<decimal> value);
    partial void OnvalorChanged();
    partial void OnstatusChanging(int value);
    partial void OnstatusChanged();
    #endregion
		
		public itemTratamento()
		{
			this._procedimento = default(EntityRef<procedimento>);
			this._tratamento = default(EntityRef<tratamento>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tratamento_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int tratamento_id
		{
			get
			{
				return this._tratamento_id;
			}
			set
			{
				if ((this._tratamento_id != value))
				{
					if (this._tratamento.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Ontratamento_idChanging(value);
					this.SendPropertyChanging();
					this._tratamento_id = value;
					this.SendPropertyChanged("tratamento_id");
					this.Ontratamento_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_procedimento_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int procedimento_id
		{
			get
			{
				return this._procedimento_id;
			}
			set
			{
				if ((this._procedimento_id != value))
				{
					if (this._procedimento.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onprocedimento_idChanging(value);
					this.SendPropertyChanging();
					this._procedimento_id = value;
					this.SendPropertyChanged("procedimento_id");
					this.Onprocedimento_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_qtd", DbType="Int NOT NULL")]
		public int qtd
		{
			get
			{
				return this._qtd;
			}
			set
			{
				if ((this._qtd != value))
				{
					this.OnqtdChanging(value);
					this.SendPropertyChanging();
					this._qtd = value;
					this.SendPropertyChanged("qtd");
					this.OnqtdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_valor", DbType="Decimal(15,2)")]
		public System.Nullable<decimal> valor
		{
			get
			{
				return this._valor;
			}
			set
			{
				if ((this._valor != value))
				{
					this.OnvalorChanging(value);
					this.SendPropertyChanging();
					this._valor = value;
					this.SendPropertyChanged("valor");
					this.OnvalorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="Int NOT NULL")]
		public int status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="procedimento_itemTratamento", Storage="_procedimento", ThisKey="procedimento_id", OtherKey="id", IsForeignKey=true)]
		public procedimento procedimento
		{
			get
			{
				return this._procedimento.Entity;
			}
			set
			{
				procedimento previousValue = this._procedimento.Entity;
				if (((previousValue != value) 
							|| (this._procedimento.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._procedimento.Entity = null;
						previousValue.itemTratamentos.Remove(this);
					}
					this._procedimento.Entity = value;
					if ((value != null))
					{
						value.itemTratamentos.Add(this);
						this._procedimento_id = value.id;
					}
					else
					{
						this._procedimento_id = default(int);
					}
					this.SendPropertyChanged("procedimento");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tratamento_itemTratamento", Storage="_tratamento", ThisKey="tratamento_id", OtherKey="avaliacao_id", IsForeignKey=true)]
		public tratamento tratamento
		{
			get
			{
				return this._tratamento.Entity;
			}
			set
			{
				tratamento previousValue = this._tratamento.Entity;
				if (((previousValue != value) 
							|| (this._tratamento.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tratamento.Entity = null;
						previousValue.itemTratamentos.Remove(this);
					}
					this._tratamento.Entity = value;
					if ((value != null))
					{
						value.itemTratamentos.Add(this);
						this._tratamento_id = value.avaliacao_id;
					}
					else
					{
						this._tratamento_id = default(int);
					}
					this.SendPropertyChanged("tratamento");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.itensReceita")]
	public partial class itemReceita : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _receita_id;
		
		private int _medicamento_id;
		
		private string _dose;
		
		private string _obs;
		
		private string _periodo;
		
		private EntityRef<medicamento> _medicamento;
		
		private EntityRef<receita> _receita;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onreceita_idChanging(int value);
    partial void Onreceita_idChanged();
    partial void Onmedicamento_idChanging(int value);
    partial void Onmedicamento_idChanged();
    partial void OndoseChanging(string value);
    partial void OndoseChanged();
    partial void OnobsChanging(string value);
    partial void OnobsChanged();
    partial void OnperiodoChanging(string value);
    partial void OnperiodoChanged();
    #endregion
		
		public itemReceita()
		{
			this._medicamento = default(EntityRef<medicamento>);
			this._receita = default(EntityRef<receita>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_receita_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int receita_id
		{
			get
			{
				return this._receita_id;
			}
			set
			{
				if ((this._receita_id != value))
				{
					if (this._receita.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onreceita_idChanging(value);
					this.SendPropertyChanging();
					this._receita_id = value;
					this.SendPropertyChanged("receita_id");
					this.Onreceita_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_medicamento_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int medicamento_id
		{
			get
			{
				return this._medicamento_id;
			}
			set
			{
				if ((this._medicamento_id != value))
				{
					if (this._medicamento.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onmedicamento_idChanging(value);
					this.SendPropertyChanging();
					this._medicamento_id = value;
					this.SendPropertyChanged("medicamento_id");
					this.Onmedicamento_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dose", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string dose
		{
			get
			{
				return this._dose;
			}
			set
			{
				if ((this._dose != value))
				{
					this.OndoseChanging(value);
					this.SendPropertyChanging();
					this._dose = value;
					this.SendPropertyChanged("dose");
					this.OndoseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_obs", DbType="VarChar(100)")]
		public string obs
		{
			get
			{
				return this._obs;
			}
			set
			{
				if ((this._obs != value))
				{
					this.OnobsChanging(value);
					this.SendPropertyChanging();
					this._obs = value;
					this.SendPropertyChanged("obs");
					this.OnobsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_periodo", DbType="VarChar(50)")]
		public string periodo
		{
			get
			{
				return this._periodo;
			}
			set
			{
				if ((this._periodo != value))
				{
					this.OnperiodoChanging(value);
					this.SendPropertyChanging();
					this._periodo = value;
					this.SendPropertyChanged("periodo");
					this.OnperiodoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="medicamento_itemReceita", Storage="_medicamento", ThisKey="medicamento_id", OtherKey="id", IsForeignKey=true)]
		public medicamento medicamento
		{
			get
			{
				return this._medicamento.Entity;
			}
			set
			{
				medicamento previousValue = this._medicamento.Entity;
				if (((previousValue != value) 
							|| (this._medicamento.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._medicamento.Entity = null;
						previousValue.itemReceitas.Remove(this);
					}
					this._medicamento.Entity = value;
					if ((value != null))
					{
						value.itemReceitas.Add(this);
						this._medicamento_id = value.id;
					}
					else
					{
						this._medicamento_id = default(int);
					}
					this.SendPropertyChanged("medicamento");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="receita_itemReceita", Storage="_receita", ThisKey="receita_id", OtherKey="id", IsForeignKey=true)]
		public receita receita
		{
			get
			{
				return this._receita.Entity;
			}
			set
			{
				receita previousValue = this._receita.Entity;
				if (((previousValue != value) 
							|| (this._receita.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._receita.Entity = null;
						previousValue.itemReceitas.Remove(this);
					}
					this._receita.Entity = value;
					if ((value != null))
					{
						value.itemReceitas.Add(this);
						this._receita_id = value.id;
					}
					else
					{
						this._receita_id = default(int);
					}
					this.SendPropertyChanged("receita");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.itensAtendimento")]
	public partial class itemAtendimento : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _atendimento_id;
		
		private int _procedimento_id;
		
		private int _qtd;
		
		private EntityRef<procedimento> _procedimento;
		
		private EntityRef<atendimento> _atendimento;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onatendimento_idChanging(int value);
    partial void Onatendimento_idChanged();
    partial void Onprocedimento_idChanging(int value);
    partial void Onprocedimento_idChanged();
    partial void OnqtdChanging(int value);
    partial void OnqtdChanged();
    #endregion
		
		public itemAtendimento()
		{
			this._procedimento = default(EntityRef<procedimento>);
			this._atendimento = default(EntityRef<atendimento>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_atendimento_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int atendimento_id
		{
			get
			{
				return this._atendimento_id;
			}
			set
			{
				if ((this._atendimento_id != value))
				{
					if (this._atendimento.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onatendimento_idChanging(value);
					this.SendPropertyChanging();
					this._atendimento_id = value;
					this.SendPropertyChanged("atendimento_id");
					this.Onatendimento_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_procedimento_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int procedimento_id
		{
			get
			{
				return this._procedimento_id;
			}
			set
			{
				if ((this._procedimento_id != value))
				{
					if (this._procedimento.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onprocedimento_idChanging(value);
					this.SendPropertyChanging();
					this._procedimento_id = value;
					this.SendPropertyChanged("procedimento_id");
					this.Onprocedimento_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_qtd", DbType="Int NOT NULL")]
		public int qtd
		{
			get
			{
				return this._qtd;
			}
			set
			{
				if ((this._qtd != value))
				{
					this.OnqtdChanging(value);
					this.SendPropertyChanging();
					this._qtd = value;
					this.SendPropertyChanged("qtd");
					this.OnqtdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="procedimento_itemAtendimento", Storage="_procedimento", ThisKey="procedimento_id", OtherKey="id", IsForeignKey=true)]
		public procedimento procedimento
		{
			get
			{
				return this._procedimento.Entity;
			}
			set
			{
				procedimento previousValue = this._procedimento.Entity;
				if (((previousValue != value) 
							|| (this._procedimento.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._procedimento.Entity = null;
						previousValue.itemAtendimentos.Remove(this);
					}
					this._procedimento.Entity = value;
					if ((value != null))
					{
						value.itemAtendimentos.Add(this);
						this._procedimento_id = value.id;
					}
					else
					{
						this._procedimento_id = default(int);
					}
					this.SendPropertyChanged("procedimento");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="atendimento1_itemAtendimento", Storage="_atendimento", ThisKey="atendimento_id", OtherKey="id", IsForeignKey=true)]
		public atendimento atendimento
		{
			get
			{
				return this._atendimento.Entity;
			}
			set
			{
				atendimento previousValue = this._atendimento.Entity;
				if (((previousValue != value) 
							|| (this._atendimento.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._atendimento.Entity = null;
						previousValue.itemAtendimentos.Remove(this);
					}
					this._atendimento.Entity = value;
					if ((value != null))
					{
						value.itemAtendimentos.Add(this);
						this._atendimento_id = value.id;
					}
					else
					{
						this._atendimento_id = default(int);
					}
					this.SendPropertyChanged("atendimento");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.imagens")]
	public partial class imagem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _paciente_id;
		
		private string _descricao;
		
		private string _arquivo;
		
		private EntityRef<paciente> _paciente;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onpaciente_idChanging(int value);
    partial void Onpaciente_idChanged();
    partial void OndescricaoChanging(string value);
    partial void OndescricaoChanged();
    partial void OnarquivoChanging(string value);
    partial void OnarquivoChanged();
    #endregion
		
		public imagem()
		{
			this._paciente = default(EntityRef<paciente>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_paciente_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int paciente_id
		{
			get
			{
				return this._paciente_id;
			}
			set
			{
				if ((this._paciente_id != value))
				{
					if (this._paciente.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onpaciente_idChanging(value);
					this.SendPropertyChanging();
					this._paciente_id = value;
					this.SendPropertyChanged("paciente_id");
					this.Onpaciente_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_descricao", DbType="VarChar(50)")]
		public string descricao
		{
			get
			{
				return this._descricao;
			}
			set
			{
				if ((this._descricao != value))
				{
					this.OndescricaoChanging(value);
					this.SendPropertyChanging();
					this._descricao = value;
					this.SendPropertyChanged("descricao");
					this.OndescricaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_arquivo", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string arquivo
		{
			get
			{
				return this._arquivo;
			}
			set
			{
				if ((this._arquivo != value))
				{
					this.OnarquivoChanging(value);
					this.SendPropertyChanging();
					this._arquivo = value;
					this.SendPropertyChanged("arquivo");
					this.OnarquivoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="paciente_imagem", Storage="_paciente", ThisKey="paciente_id", OtherKey="pessoa_id", IsForeignKey=true)]
		public paciente paciente
		{
			get
			{
				return this._paciente.Entity;
			}
			set
			{
				paciente previousValue = this._paciente.Entity;
				if (((previousValue != value) 
							|| (this._paciente.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._paciente.Entity = null;
						previousValue.imagems.Remove(this);
					}
					this._paciente.Entity = value;
					if ((value != null))
					{
						value.imagems.Add(this);
						this._paciente_id = value.pessoa_id;
					}
					else
					{
						this._paciente_id = default(int);
					}
					this.SendPropertyChanged("paciente");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.funcionarios")]
	public partial class funcionario : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _pessoa_id;
		
		private decimal _salario;
		
		private string _cargo;
		
		private EntityRef<pessoa> _pessoa;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onpessoa_idChanging(int value);
    partial void Onpessoa_idChanged();
    partial void OnsalarioChanging(decimal value);
    partial void OnsalarioChanged();
    partial void OncargoChanging(string value);
    partial void OncargoChanged();
    #endregion
		
		public funcionario()
		{
			this._pessoa = default(EntityRef<pessoa>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pessoa_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int pessoa_id
		{
			get
			{
				return this._pessoa_id;
			}
			set
			{
				if ((this._pessoa_id != value))
				{
					if (this._pessoa.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onpessoa_idChanging(value);
					this.SendPropertyChanging();
					this._pessoa_id = value;
					this.SendPropertyChanged("pessoa_id");
					this.Onpessoa_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_salario", DbType="Decimal(15,2) NOT NULL")]
		public decimal salario
		{
			get
			{
				return this._salario;
			}
			set
			{
				if ((this._salario != value))
				{
					this.OnsalarioChanging(value);
					this.SendPropertyChanging();
					this._salario = value;
					this.SendPropertyChanged("salario");
					this.OnsalarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cargo", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string cargo
		{
			get
			{
				return this._cargo;
			}
			set
			{
				if ((this._cargo != value))
				{
					this.OncargoChanging(value);
					this.SendPropertyChanging();
					this._cargo = value;
					this.SendPropertyChanged("cargo");
					this.OncargoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="pessoa_funcionario", Storage="_pessoa", ThisKey="pessoa_id", OtherKey="id", IsForeignKey=true)]
		public pessoa pessoa
		{
			get
			{
				return this._pessoa.Entity;
			}
			set
			{
				pessoa previousValue = this._pessoa.Entity;
				if (((previousValue != value) 
							|| (this._pessoa.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._pessoa.Entity = null;
						previousValue.funcionario = null;
					}
					this._pessoa.Entity = value;
					if ((value != null))
					{
						value.funcionario = this;
						this._pessoa_id = value.id;
					}
					else
					{
						this._pessoa_id = default(int);
					}
					this.SendPropertyChanged("pessoa");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.dentistas")]
	public partial class dentista : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _pessoa_id;
		
		private string _cro;
		
		private decimal _salario;
		
		private EntitySet<avaliacao> _avaliacaos;
		
		private EntitySet<atendimento> _atendimentos;
		
		private EntityRef<pessoa> _pessoa;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onpessoa_idChanging(int value);
    partial void Onpessoa_idChanged();
    partial void OncroChanging(string value);
    partial void OncroChanged();
    partial void OnsalarioChanging(decimal value);
    partial void OnsalarioChanged();
    #endregion
		
		public dentista()
		{
			this._avaliacaos = new EntitySet<avaliacao>(new Action<avaliacao>(this.attach_avaliacaos), new Action<avaliacao>(this.detach_avaliacaos));
			this._atendimentos = new EntitySet<atendimento>(new Action<atendimento>(this.attach_atendimentos), new Action<atendimento>(this.detach_atendimentos));
			this._pessoa = default(EntityRef<pessoa>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pessoa_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int pessoa_id
		{
			get
			{
				return this._pessoa_id;
			}
			set
			{
				if ((this._pessoa_id != value))
				{
					if (this._pessoa.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onpessoa_idChanging(value);
					this.SendPropertyChanging();
					this._pessoa_id = value;
					this.SendPropertyChanged("pessoa_id");
					this.Onpessoa_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cro", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string cro
		{
			get
			{
				return this._cro;
			}
			set
			{
				if ((this._cro != value))
				{
					this.OncroChanging(value);
					this.SendPropertyChanging();
					this._cro = value;
					this.SendPropertyChanged("cro");
					this.OncroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_salario", DbType="Decimal(15,2) NOT NULL")]
		public decimal salario
		{
			get
			{
				return this._salario;
			}
			set
			{
				if ((this._salario != value))
				{
					this.OnsalarioChanging(value);
					this.SendPropertyChanging();
					this._salario = value;
					this.SendPropertyChanged("salario");
					this.OnsalarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dentista_avaliacao", Storage="_avaliacaos", ThisKey="pessoa_id", OtherKey="dentista_id")]
		public EntitySet<avaliacao> avaliacaos
		{
			get
			{
				return this._avaliacaos;
			}
			set
			{
				this._avaliacaos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dentista_atendimento1", Storage="_atendimentos", ThisKey="pessoa_id", OtherKey="dentista_id")]
		public EntitySet<atendimento> atendimentos
		{
			get
			{
				return this._atendimentos;
			}
			set
			{
				this._atendimentos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="pessoa_dentista", Storage="_pessoa", ThisKey="pessoa_id", OtherKey="id", IsForeignKey=true)]
		public pessoa pessoa
		{
			get
			{
				return this._pessoa.Entity;
			}
			set
			{
				pessoa previousValue = this._pessoa.Entity;
				if (((previousValue != value) 
							|| (this._pessoa.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._pessoa.Entity = null;
						previousValue.dentista = null;
					}
					this._pessoa.Entity = value;
					if ((value != null))
					{
						value.dentista = this;
						this._pessoa_id = value.id;
					}
					else
					{
						this._pessoa_id = default(int);
					}
					this.SendPropertyChanged("pessoa");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_avaliacaos(avaliacao entity)
		{
			this.SendPropertyChanging();
			entity.dentista = this;
		}
		
		private void detach_avaliacaos(avaliacao entity)
		{
			this.SendPropertyChanging();
			entity.dentista = null;
		}
		
		private void attach_atendimentos(atendimento entity)
		{
			this.SendPropertyChanging();
			entity.dentista = this;
		}
		
		private void detach_atendimentos(atendimento entity)
		{
			this.SendPropertyChanging();
			entity.dentista = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.convenios")]
	public partial class convenio : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _cnpj;
		
		private string _ie;
		
		private string _razao_social;
		
		private string _nome_fantasia;
		
		private EntitySet<paciente> _pacientes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OncnpjChanging(string value);
    partial void OncnpjChanged();
    partial void OnieChanging(string value);
    partial void OnieChanged();
    partial void Onrazao_socialChanging(string value);
    partial void Onrazao_socialChanged();
    partial void Onnome_fantasiaChanging(string value);
    partial void Onnome_fantasiaChanged();
    #endregion
		
		public convenio()
		{
			this._pacientes = new EntitySet<paciente>(new Action<paciente>(this.attach_pacientes), new Action<paciente>(this.detach_pacientes));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cnpj", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string cnpj
		{
			get
			{
				return this._cnpj;
			}
			set
			{
				if ((this._cnpj != value))
				{
					this.OncnpjChanging(value);
					this.SendPropertyChanging();
					this._cnpj = value;
					this.SendPropertyChanged("cnpj");
					this.OncnpjChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ie", DbType="VarChar(20)")]
		public string ie
		{
			get
			{
				return this._ie;
			}
			set
			{
				if ((this._ie != value))
				{
					this.OnieChanging(value);
					this.SendPropertyChanging();
					this._ie = value;
					this.SendPropertyChanged("ie");
					this.OnieChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_razao_social", DbType="VarChar(100)")]
		public string razao_social
		{
			get
			{
				return this._razao_social;
			}
			set
			{
				if ((this._razao_social != value))
				{
					this.Onrazao_socialChanging(value);
					this.SendPropertyChanging();
					this._razao_social = value;
					this.SendPropertyChanged("razao_social");
					this.Onrazao_socialChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nome_fantasia", DbType="VarChar(100)")]
		public string nome_fantasia
		{
			get
			{
				return this._nome_fantasia;
			}
			set
			{
				if ((this._nome_fantasia != value))
				{
					this.Onnome_fantasiaChanging(value);
					this.SendPropertyChanging();
					this._nome_fantasia = value;
					this.SendPropertyChanged("nome_fantasia");
					this.Onnome_fantasiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="convenio_paciente", Storage="_pacientes", ThisKey="id", OtherKey="convenio_id")]
		public EntitySet<paciente> pacientes
		{
			get
			{
				return this._pacientes;
			}
			set
			{
				this._pacientes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_pacientes(paciente entity)
		{
			this.SendPropertyChanging();
			entity.convenio = this;
		}
		
		private void detach_pacientes(paciente entity)
		{
			this.SendPropertyChanging();
			entity.convenio = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.cidades")]
	public partial class cidade : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _nome;
		
		private string _uf;
		
		private EntitySet<pessoa> _pessoas;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnomeChanging(string value);
    partial void OnnomeChanged();
    partial void OnufChanging(string value);
    partial void OnufChanged();
    #endregion
		
		public cidade()
		{
			this._pessoas = new EntitySet<pessoa>(new Action<pessoa>(this.attach_pessoas), new Action<pessoa>(this.detach_pessoas));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nome", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string nome
		{
			get
			{
				return this._nome;
			}
			set
			{
				if ((this._nome != value))
				{
					this.OnnomeChanging(value);
					this.SendPropertyChanging();
					this._nome = value;
					this.SendPropertyChanged("nome");
					this.OnnomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_uf", DbType="Char(2)")]
		public string uf
		{
			get
			{
				return this._uf;
			}
			set
			{
				if ((this._uf != value))
				{
					this.OnufChanging(value);
					this.SendPropertyChanging();
					this._uf = value;
					this.SendPropertyChanged("uf");
					this.OnufChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="cidade_pessoa", Storage="_pessoas", ThisKey="id", OtherKey="cidade_id")]
		public EntitySet<pessoa> pessoas
		{
			get
			{
				return this._pessoas;
			}
			set
			{
				this._pessoas.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_pessoas(pessoa entity)
		{
			this.SendPropertyChanging();
			entity.cidade = this;
		}
		
		private void detach_pessoas(pessoa entity)
		{
			this.SendPropertyChanging();
			entity.cidade = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.avaliacoes")]
	public partial class avaliacao : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.DateTime _data;
		
		private int _dentista_id;
		
		private int _paciente_id;
		
		private EntityRef<tratamento> _tratamento;
		
		private EntityRef<dentista> _dentista;
		
		private EntityRef<paciente> _paciente;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OndataChanging(System.DateTime value);
    partial void OndataChanged();
    partial void Ondentista_idChanging(int value);
    partial void Ondentista_idChanged();
    partial void Onpaciente_idChanging(int value);
    partial void Onpaciente_idChanged();
    #endregion
		
		public avaliacao()
		{
			this._tratamento = default(EntityRef<tratamento>);
			this._dentista = default(EntityRef<dentista>);
			this._paciente = default(EntityRef<paciente>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_data", DbType="DateTime NOT NULL")]
		public System.DateTime data
		{
			get
			{
				return this._data;
			}
			set
			{
				if ((this._data != value))
				{
					this.OndataChanging(value);
					this.SendPropertyChanging();
					this._data = value;
					this.SendPropertyChanged("data");
					this.OndataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dentista_id", DbType="Int NOT NULL")]
		public int dentista_id
		{
			get
			{
				return this._dentista_id;
			}
			set
			{
				if ((this._dentista_id != value))
				{
					if (this._dentista.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Ondentista_idChanging(value);
					this.SendPropertyChanging();
					this._dentista_id = value;
					this.SendPropertyChanged("dentista_id");
					this.Ondentista_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_paciente_id", DbType="Int NOT NULL")]
		public int paciente_id
		{
			get
			{
				return this._paciente_id;
			}
			set
			{
				if ((this._paciente_id != value))
				{
					if (this._paciente.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onpaciente_idChanging(value);
					this.SendPropertyChanging();
					this._paciente_id = value;
					this.SendPropertyChanged("paciente_id");
					this.Onpaciente_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="avaliacao_tratamento", Storage="_tratamento", ThisKey="id", OtherKey="avaliacao_id", IsUnique=true, IsForeignKey=false)]
		public tratamento tratamento
		{
			get
			{
				return this._tratamento.Entity;
			}
			set
			{
				tratamento previousValue = this._tratamento.Entity;
				if (((previousValue != value) 
							|| (this._tratamento.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tratamento.Entity = null;
						previousValue.avaliacao = null;
					}
					this._tratamento.Entity = value;
					if ((value != null))
					{
						value.avaliacao = this;
					}
					this.SendPropertyChanged("tratamento");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dentista_avaliacao", Storage="_dentista", ThisKey="dentista_id", OtherKey="pessoa_id", IsForeignKey=true)]
		public dentista dentista
		{
			get
			{
				return this._dentista.Entity;
			}
			set
			{
				dentista previousValue = this._dentista.Entity;
				if (((previousValue != value) 
							|| (this._dentista.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._dentista.Entity = null;
						previousValue.avaliacaos.Remove(this);
					}
					this._dentista.Entity = value;
					if ((value != null))
					{
						value.avaliacaos.Add(this);
						this._dentista_id = value.pessoa_id;
					}
					else
					{
						this._dentista_id = default(int);
					}
					this.SendPropertyChanged("dentista");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="paciente_avaliacao", Storage="_paciente", ThisKey="paciente_id", OtherKey="pessoa_id", IsForeignKey=true)]
		public paciente paciente
		{
			get
			{
				return this._paciente.Entity;
			}
			set
			{
				paciente previousValue = this._paciente.Entity;
				if (((previousValue != value) 
							|| (this._paciente.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._paciente.Entity = null;
						previousValue.avaliacaos.Remove(this);
					}
					this._paciente.Entity = value;
					if ((value != null))
					{
						value.avaliacaos.Add(this);
						this._paciente_id = value.pessoa_id;
					}
					else
					{
						this._paciente_id = default(int);
					}
					this.SendPropertyChanged("paciente");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.v_avaliacoes")]
	public partial class v_avaliacoe
	{
		
		private int _Código;
		
		private System.DateTime _Data;
		
		private string _Dentista;
		
		private string _Paciente;
		
		public v_avaliacoe()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Código", DbType="Int NOT NULL")]
		public int Código
		{
			get
			{
				return this._Código;
			}
			set
			{
				if ((this._Código != value))
				{
					this._Código = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data", DbType="DateTime NOT NULL")]
		public System.DateTime Data
		{
			get
			{
				return this._Data;
			}
			set
			{
				if ((this._Data != value))
				{
					this._Data = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dentista", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Dentista
		{
			get
			{
				return this._Dentista;
			}
			set
			{
				if ((this._Dentista != value))
				{
					this._Dentista = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Paciente", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Paciente
		{
			get
			{
				return this._Paciente;
			}
			set
			{
				if ((this._Paciente != value))
				{
					this._Paciente = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.v_cidades")]
	public partial class v_cidade
	{
		
		private int _Código;
		
		private string _Cidade;
		
		private string _UF;
		
		public v_cidade()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Código", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int Código
		{
			get
			{
				return this._Código;
			}
			set
			{
				if ((this._Código != value))
				{
					this._Código = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cidade", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string Cidade
		{
			get
			{
				return this._Cidade;
			}
			set
			{
				if ((this._Cidade != value))
				{
					this._Cidade = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UF", DbType="Char(2)")]
		public string UF
		{
			get
			{
				return this._UF;
			}
			set
			{
				if ((this._UF != value))
				{
					this._UF = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.v_convenios")]
	public partial class v_convenio
	{
		
		private int _Código;
		
		private string _CNPJ;
		
		private string _IE;
		
		private string _Razão_Social;
		
		private string _Nome_Fantasia;
		
		public v_convenio()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Código", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int Código
		{
			get
			{
				return this._Código;
			}
			set
			{
				if ((this._Código != value))
				{
					this._Código = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CNPJ", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string CNPJ
		{
			get
			{
				return this._CNPJ;
			}
			set
			{
				if ((this._CNPJ != value))
				{
					this._CNPJ = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IE", DbType="VarChar(20)")]
		public string IE
		{
			get
			{
				return this._IE;
			}
			set
			{
				if ((this._IE != value))
				{
					this._IE = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Razão Social]", Storage="_Razão_Social", DbType="VarChar(100)")]
		public string Razão_Social
		{
			get
			{
				return this._Razão_Social;
			}
			set
			{
				if ((this._Razão_Social != value))
				{
					this._Razão_Social = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Nome Fantasia]", Storage="_Nome_Fantasia", DbType="VarChar(100)")]
		public string Nome_Fantasia
		{
			get
			{
				return this._Nome_Fantasia;
			}
			set
			{
				if ((this._Nome_Fantasia != value))
				{
					this._Nome_Fantasia = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.v_dentistas")]
	public partial class v_dentista
	{
		
		private int _Código;
		
		private string _Nome;
		
		private string _CPF;
		
		private string _RG;
		
		private System.Nullable<System.DateTime> _Data_de_Nascimento;
		
		private string _Telefone_1;
		
		private string _Telefone_2;
		
		private System.Nullable<char> _Sexo;
		
		private string _Endereço;
		
		private string _Usuário;
		
		private string _Senha;
		
		private int _Status;
		
		private string _Obs;
		
		private System.Nullable<int> _Tipo_Usuário;
		
		private string _CRO;
		
		public v_dentista()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Código", DbType="Int NOT NULL")]
		public int Código
		{
			get
			{
				return this._Código;
			}
			set
			{
				if ((this._Código != value))
				{
					this._Código = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nome", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Nome
		{
			get
			{
				return this._Nome;
			}
			set
			{
				if ((this._Nome != value))
				{
					this._Nome = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CPF", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string CPF
		{
			get
			{
				return this._CPF;
			}
			set
			{
				if ((this._CPF != value))
				{
					this._CPF = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RG", DbType="VarChar(12)")]
		public string RG
		{
			get
			{
				return this._RG;
			}
			set
			{
				if ((this._RG != value))
				{
					this._RG = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Data de Nascimento]", Storage="_Data_de_Nascimento", DbType="Date")]
		public System.Nullable<System.DateTime> Data_de_Nascimento
		{
			get
			{
				return this._Data_de_Nascimento;
			}
			set
			{
				if ((this._Data_de_Nascimento != value))
				{
					this._Data_de_Nascimento = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Telefone 1]", Storage="_Telefone_1", DbType="VarChar(15)")]
		public string Telefone_1
		{
			get
			{
				return this._Telefone_1;
			}
			set
			{
				if ((this._Telefone_1 != value))
				{
					this._Telefone_1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Telefone 2]", Storage="_Telefone_2", DbType="VarChar(15)")]
		public string Telefone_2
		{
			get
			{
				return this._Telefone_2;
			}
			set
			{
				if ((this._Telefone_2 != value))
				{
					this._Telefone_2 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sexo", DbType="Char(1)")]
		public System.Nullable<char> Sexo
		{
			get
			{
				return this._Sexo;
			}
			set
			{
				if ((this._Sexo != value))
				{
					this._Sexo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Endereço", DbType="VarChar(50)")]
		public string Endereço
		{
			get
			{
				return this._Endereço;
			}
			set
			{
				if ((this._Endereço != value))
				{
					this._Endereço = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Usuário", DbType="VarChar(20)")]
		public string Usuário
		{
			get
			{
				return this._Usuário;
			}
			set
			{
				if ((this._Usuário != value))
				{
					this._Usuário = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Senha", DbType="VarChar(50)")]
		public string Senha
		{
			get
			{
				return this._Senha;
			}
			set
			{
				if ((this._Senha != value))
				{
					this._Senha = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this._Status = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Obs", DbType="VarChar(200)")]
		public string Obs
		{
			get
			{
				return this._Obs;
			}
			set
			{
				if ((this._Obs != value))
				{
					this._Obs = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Tipo Usuário]", Storage="_Tipo_Usuário", DbType="Int")]
		public System.Nullable<int> Tipo_Usuário
		{
			get
			{
				return this._Tipo_Usuário;
			}
			set
			{
				if ((this._Tipo_Usuário != value))
				{
					this._Tipo_Usuário = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CRO", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string CRO
		{
			get
			{
				return this._CRO;
			}
			set
			{
				if ((this._CRO != value))
				{
					this._CRO = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.v_funcionarios")]
	public partial class v_funcionario
	{
		
		private int _Código;
		
		private string _Nome;
		
		private string _CPF;
		
		private string _RG;
		
		private System.Nullable<System.DateTime> _Data_de_Nascimento;
		
		private string _Telefone_1;
		
		private string _Telefone_2;
		
		private System.Nullable<char> _Sexo;
		
		private string _Endereço;
		
		private string _Usuário;
		
		private string _Senha;
		
		private int _Status;
		
		private string _Obs;
		
		private System.Nullable<int> _Tipo_Usuário;
		
		private decimal _Salário;
		
		private string _Cargo;
		
		public v_funcionario()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Código", DbType="Int NOT NULL")]
		public int Código
		{
			get
			{
				return this._Código;
			}
			set
			{
				if ((this._Código != value))
				{
					this._Código = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nome", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Nome
		{
			get
			{
				return this._Nome;
			}
			set
			{
				if ((this._Nome != value))
				{
					this._Nome = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CPF", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string CPF
		{
			get
			{
				return this._CPF;
			}
			set
			{
				if ((this._CPF != value))
				{
					this._CPF = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RG", DbType="VarChar(12)")]
		public string RG
		{
			get
			{
				return this._RG;
			}
			set
			{
				if ((this._RG != value))
				{
					this._RG = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Data de Nascimento]", Storage="_Data_de_Nascimento", DbType="Date")]
		public System.Nullable<System.DateTime> Data_de_Nascimento
		{
			get
			{
				return this._Data_de_Nascimento;
			}
			set
			{
				if ((this._Data_de_Nascimento != value))
				{
					this._Data_de_Nascimento = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Telefone 1]", Storage="_Telefone_1", DbType="VarChar(15)")]
		public string Telefone_1
		{
			get
			{
				return this._Telefone_1;
			}
			set
			{
				if ((this._Telefone_1 != value))
				{
					this._Telefone_1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Telefone 2]", Storage="_Telefone_2", DbType="VarChar(15)")]
		public string Telefone_2
		{
			get
			{
				return this._Telefone_2;
			}
			set
			{
				if ((this._Telefone_2 != value))
				{
					this._Telefone_2 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sexo", DbType="Char(1)")]
		public System.Nullable<char> Sexo
		{
			get
			{
				return this._Sexo;
			}
			set
			{
				if ((this._Sexo != value))
				{
					this._Sexo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Endereço", DbType="VarChar(50)")]
		public string Endereço
		{
			get
			{
				return this._Endereço;
			}
			set
			{
				if ((this._Endereço != value))
				{
					this._Endereço = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Usuário", DbType="VarChar(20)")]
		public string Usuário
		{
			get
			{
				return this._Usuário;
			}
			set
			{
				if ((this._Usuário != value))
				{
					this._Usuário = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Senha", DbType="VarChar(50)")]
		public string Senha
		{
			get
			{
				return this._Senha;
			}
			set
			{
				if ((this._Senha != value))
				{
					this._Senha = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this._Status = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Obs", DbType="VarChar(200)")]
		public string Obs
		{
			get
			{
				return this._Obs;
			}
			set
			{
				if ((this._Obs != value))
				{
					this._Obs = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Tipo Usuário]", Storage="_Tipo_Usuário", DbType="Int")]
		public System.Nullable<int> Tipo_Usuário
		{
			get
			{
				return this._Tipo_Usuário;
			}
			set
			{
				if ((this._Tipo_Usuário != value))
				{
					this._Tipo_Usuário = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Salário", DbType="Decimal(15,2) NOT NULL")]
		public decimal Salário
		{
			get
			{
				return this._Salário;
			}
			set
			{
				if ((this._Salário != value))
				{
					this._Salário = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cargo", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Cargo
		{
			get
			{
				return this._Cargo;
			}
			set
			{
				if ((this._Cargo != value))
				{
					this._Cargo = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.v_imagens")]
	public partial class v_imagen
	{
		
		private int _Código;
		
		private string _Paciente;
		
		private string _Descrição;
		
		private string _Arquivo;
		
		public v_imagen()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Código", DbType="Int NOT NULL")]
		public int Código
		{
			get
			{
				return this._Código;
			}
			set
			{
				if ((this._Código != value))
				{
					this._Código = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Paciente", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Paciente
		{
			get
			{
				return this._Paciente;
			}
			set
			{
				if ((this._Paciente != value))
				{
					this._Paciente = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descrição", DbType="VarChar(50)")]
		public string Descrição
		{
			get
			{
				return this._Descrição;
			}
			set
			{
				if ((this._Descrição != value))
				{
					this._Descrição = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Arquivo", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Arquivo
		{
			get
			{
				return this._Arquivo;
			}
			set
			{
				if ((this._Arquivo != value))
				{
					this._Arquivo = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.v_itensTratamento")]
	public partial class v_itensTratamento
	{
		
		private int _Código_Tratamento;
		
		private int _Código_Procedimento;
		
		private string _Descrição;
		
		private int _Quantidade;
		
		private int _Status;
		
		private System.Nullable<decimal> _Valor;
		
		public v_itensTratamento()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Código Tratamento]", Storage="_Código_Tratamento", DbType="Int NOT NULL")]
		public int Código_Tratamento
		{
			get
			{
				return this._Código_Tratamento;
			}
			set
			{
				if ((this._Código_Tratamento != value))
				{
					this._Código_Tratamento = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Código Procedimento]", Storage="_Código_Procedimento", DbType="Int NOT NULL")]
		public int Código_Procedimento
		{
			get
			{
				return this._Código_Procedimento;
			}
			set
			{
				if ((this._Código_Procedimento != value))
				{
					this._Código_Procedimento = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descrição", DbType="VarChar(80) NOT NULL", CanBeNull=false)]
		public string Descrição
		{
			get
			{
				return this._Descrição;
			}
			set
			{
				if ((this._Descrição != value))
				{
					this._Descrição = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantidade", DbType="Int NOT NULL")]
		public int Quantidade
		{
			get
			{
				return this._Quantidade;
			}
			set
			{
				if ((this._Quantidade != value))
				{
					this._Quantidade = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this._Status = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Valor", DbType="Decimal(15,2)")]
		public System.Nullable<decimal> Valor
		{
			get
			{
				return this._Valor;
			}
			set
			{
				if ((this._Valor != value))
				{
					this._Valor = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.v_medicamentos")]
	public partial class v_medicamento
	{
		
		private int _Código;
		
		private string _Medicamento;
		
		private string _Classe_Terapeutica;
		
		private string _Tarja;
		
		private string _Posologia;
		
		private string _Unidade;
		
		public v_medicamento()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Código", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int Código
		{
			get
			{
				return this._Código;
			}
			set
			{
				if ((this._Código != value))
				{
					this._Código = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Medicamento", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Medicamento
		{
			get
			{
				return this._Medicamento;
			}
			set
			{
				if ((this._Medicamento != value))
				{
					this._Medicamento = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Classe Terapeutica]", Storage="_Classe_Terapeutica", DbType="VarChar(50)")]
		public string Classe_Terapeutica
		{
			get
			{
				return this._Classe_Terapeutica;
			}
			set
			{
				if ((this._Classe_Terapeutica != value))
				{
					this._Classe_Terapeutica = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tarja", DbType="VarChar(50)")]
		public string Tarja
		{
			get
			{
				return this._Tarja;
			}
			set
			{
				if ((this._Tarja != value))
				{
					this._Tarja = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Posologia", DbType="VarChar(50)")]
		public string Posologia
		{
			get
			{
				return this._Posologia;
			}
			set
			{
				if ((this._Posologia != value))
				{
					this._Posologia = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Unidade", DbType="VarChar(10)")]
		public string Unidade
		{
			get
			{
				return this._Unidade;
			}
			set
			{
				if ((this._Unidade != value))
				{
					this._Unidade = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.v_pacientes")]
	public partial class v_paciente
	{
		
		private int _Código;
		
		private string _Nome;
		
		private string _CPF;
		
		private string _RG;
		
		private System.Nullable<System.DateTime> _Data_de_Nascimento;
		
		private string _Telefone_1;
		
		private string _Telefone_2;
		
		private System.Nullable<char> _Sexo;
		
		private string _Endereço;
		
		private string _Usuário;
		
		private string _Senha;
		
		private int _Status;
		
		private string _Obs;
		
		private System.Nullable<int> _Tipo_Usuário;
		
		private string _Convênio;
		
		public v_paciente()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Código", DbType="Int NOT NULL")]
		public int Código
		{
			get
			{
				return this._Código;
			}
			set
			{
				if ((this._Código != value))
				{
					this._Código = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nome", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Nome
		{
			get
			{
				return this._Nome;
			}
			set
			{
				if ((this._Nome != value))
				{
					this._Nome = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CPF", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string CPF
		{
			get
			{
				return this._CPF;
			}
			set
			{
				if ((this._CPF != value))
				{
					this._CPF = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RG", DbType="VarChar(12)")]
		public string RG
		{
			get
			{
				return this._RG;
			}
			set
			{
				if ((this._RG != value))
				{
					this._RG = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Data de Nascimento]", Storage="_Data_de_Nascimento", DbType="Date")]
		public System.Nullable<System.DateTime> Data_de_Nascimento
		{
			get
			{
				return this._Data_de_Nascimento;
			}
			set
			{
				if ((this._Data_de_Nascimento != value))
				{
					this._Data_de_Nascimento = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Telefone 1]", Storage="_Telefone_1", DbType="VarChar(15)")]
		public string Telefone_1
		{
			get
			{
				return this._Telefone_1;
			}
			set
			{
				if ((this._Telefone_1 != value))
				{
					this._Telefone_1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Telefone 2]", Storage="_Telefone_2", DbType="VarChar(15)")]
		public string Telefone_2
		{
			get
			{
				return this._Telefone_2;
			}
			set
			{
				if ((this._Telefone_2 != value))
				{
					this._Telefone_2 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sexo", DbType="Char(1)")]
		public System.Nullable<char> Sexo
		{
			get
			{
				return this._Sexo;
			}
			set
			{
				if ((this._Sexo != value))
				{
					this._Sexo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Endereço", DbType="VarChar(50)")]
		public string Endereço
		{
			get
			{
				return this._Endereço;
			}
			set
			{
				if ((this._Endereço != value))
				{
					this._Endereço = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Usuário", DbType="VarChar(20)")]
		public string Usuário
		{
			get
			{
				return this._Usuário;
			}
			set
			{
				if ((this._Usuário != value))
				{
					this._Usuário = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Senha", DbType="VarChar(50)")]
		public string Senha
		{
			get
			{
				return this._Senha;
			}
			set
			{
				if ((this._Senha != value))
				{
					this._Senha = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this._Status = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Obs", DbType="VarChar(200)")]
		public string Obs
		{
			get
			{
				return this._Obs;
			}
			set
			{
				if ((this._Obs != value))
				{
					this._Obs = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Tipo Usuário]", Storage="_Tipo_Usuário", DbType="Int")]
		public System.Nullable<int> Tipo_Usuário
		{
			get
			{
				return this._Tipo_Usuário;
			}
			set
			{
				if ((this._Tipo_Usuário != value))
				{
					this._Tipo_Usuário = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Convênio", DbType="VarChar(100)")]
		public string Convênio
		{
			get
			{
				return this._Convênio;
			}
			set
			{
				if ((this._Convênio != value))
				{
					this._Convênio = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.v_pessoas")]
	public partial class v_pessoa
	{
		
		private int _Código;
		
		private string _Nome;
		
		private string _CPF;
		
		private string _RG;
		
		private System.Nullable<System.DateTime> _Data_de_Nascimento;
		
		private string _Telefone_1;
		
		private string _Telefone_2;
		
		private System.Nullable<char> _Sexo;
		
		private string _Endereço;
		
		private string _Usuário;
		
		private string _Senha;
		
		private int _Status;
		
		private string _Obs;
		
		private System.Nullable<int> _Tipo_Usuário;
		
		public v_pessoa()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Código", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int Código
		{
			get
			{
				return this._Código;
			}
			set
			{
				if ((this._Código != value))
				{
					this._Código = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nome", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Nome
		{
			get
			{
				return this._Nome;
			}
			set
			{
				if ((this._Nome != value))
				{
					this._Nome = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CPF", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string CPF
		{
			get
			{
				return this._CPF;
			}
			set
			{
				if ((this._CPF != value))
				{
					this._CPF = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RG", DbType="VarChar(12)")]
		public string RG
		{
			get
			{
				return this._RG;
			}
			set
			{
				if ((this._RG != value))
				{
					this._RG = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Data de Nascimento]", Storage="_Data_de_Nascimento", DbType="Date")]
		public System.Nullable<System.DateTime> Data_de_Nascimento
		{
			get
			{
				return this._Data_de_Nascimento;
			}
			set
			{
				if ((this._Data_de_Nascimento != value))
				{
					this._Data_de_Nascimento = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Telefone 1]", Storage="_Telefone_1", DbType="VarChar(15)")]
		public string Telefone_1
		{
			get
			{
				return this._Telefone_1;
			}
			set
			{
				if ((this._Telefone_1 != value))
				{
					this._Telefone_1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Telefone 2]", Storage="_Telefone_2", DbType="VarChar(15)")]
		public string Telefone_2
		{
			get
			{
				return this._Telefone_2;
			}
			set
			{
				if ((this._Telefone_2 != value))
				{
					this._Telefone_2 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sexo", DbType="Char(1)")]
		public System.Nullable<char> Sexo
		{
			get
			{
				return this._Sexo;
			}
			set
			{
				if ((this._Sexo != value))
				{
					this._Sexo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Endereço", DbType="VarChar(50)")]
		public string Endereço
		{
			get
			{
				return this._Endereço;
			}
			set
			{
				if ((this._Endereço != value))
				{
					this._Endereço = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Usuário", DbType="VarChar(20)")]
		public string Usuário
		{
			get
			{
				return this._Usuário;
			}
			set
			{
				if ((this._Usuário != value))
				{
					this._Usuário = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Senha", DbType="VarChar(50)")]
		public string Senha
		{
			get
			{
				return this._Senha;
			}
			set
			{
				if ((this._Senha != value))
				{
					this._Senha = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this._Status = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Obs", DbType="VarChar(200)")]
		public string Obs
		{
			get
			{
				return this._Obs;
			}
			set
			{
				if ((this._Obs != value))
				{
					this._Obs = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Tipo Usuário]", Storage="_Tipo_Usuário", DbType="Int")]
		public System.Nullable<int> Tipo_Usuário
		{
			get
			{
				return this._Tipo_Usuário;
			}
			set
			{
				if ((this._Tipo_Usuário != value))
				{
					this._Tipo_Usuário = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.v_procedimentos")]
	public partial class v_procedimento
	{
		
		private int _Código;
		
		private string _Descrição;
		
		public v_procedimento()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Código", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int Código
		{
			get
			{
				return this._Código;
			}
			set
			{
				if ((this._Código != value))
				{
					this._Código = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descrição", DbType="VarChar(80) NOT NULL", CanBeNull=false)]
		public string Descrição
		{
			get
			{
				return this._Descrição;
			}
			set
			{
				if ((this._Descrição != value))
				{
					this._Descrição = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.v_tratamentos")]
	public partial class v_tratamento
	{
		
		private int _Código;
		
		private int _Status;
		
		private System.Nullable<System.DateTime> _Data_Inicial;
		
		private System.Nullable<System.DateTime> _Data_Final;
		
		private System.Nullable<decimal> _Total;
		
		public v_tratamento()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Código", DbType="Int NOT NULL")]
		public int Código
		{
			get
			{
				return this._Código;
			}
			set
			{
				if ((this._Código != value))
				{
					this._Código = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this._Status = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Data Inicial]", Storage="_Data_Inicial", DbType="Date")]
		public System.Nullable<System.DateTime> Data_Inicial
		{
			get
			{
				return this._Data_Inicial;
			}
			set
			{
				if ((this._Data_Inicial != value))
				{
					this._Data_Inicial = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Data Final]", Storage="_Data_Final", DbType="Date")]
		public System.Nullable<System.DateTime> Data_Final
		{
			get
			{
				return this._Data_Final;
			}
			set
			{
				if ((this._Data_Final != value))
				{
					this._Data_Final = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Total", DbType="Decimal(15,2)")]
		public System.Nullable<decimal> Total
		{
			get
			{
				return this._Total;
			}
			set
			{
				if ((this._Total != value))
				{
					this._Total = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.atendimentos")]
	public partial class atendimento : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.DateTime _data;
		
		private int _status;
		
		private int _dentista_id;
		
		private int _tratamento_id;
		
		private EntitySet<receita> _receitas;
		
		private EntitySet<itemAtendimento> _itemAtendimentos;
		
		private EntityRef<dentista> _dentista;
		
		private EntityRef<tratamento> _tratamento;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OndataChanging(System.DateTime value);
    partial void OndataChanged();
    partial void OnstatusChanging(int value);
    partial void OnstatusChanged();
    partial void Ondentista_idChanging(int value);
    partial void Ondentista_idChanged();
    partial void Ontratamento_idChanging(int value);
    partial void Ontratamento_idChanged();
    #endregion
		
		public atendimento()
		{
			this._receitas = new EntitySet<receita>(new Action<receita>(this.attach_receitas), new Action<receita>(this.detach_receitas));
			this._itemAtendimentos = new EntitySet<itemAtendimento>(new Action<itemAtendimento>(this.attach_itemAtendimentos), new Action<itemAtendimento>(this.detach_itemAtendimentos));
			this._dentista = default(EntityRef<dentista>);
			this._tratamento = default(EntityRef<tratamento>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_data", DbType="DateTime NOT NULL")]
		public System.DateTime data
		{
			get
			{
				return this._data;
			}
			set
			{
				if ((this._data != value))
				{
					this.OndataChanging(value);
					this.SendPropertyChanging();
					this._data = value;
					this.SendPropertyChanged("data");
					this.OndataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="Int NOT NULL")]
		public int status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dentista_id", DbType="Int NOT NULL")]
		public int dentista_id
		{
			get
			{
				return this._dentista_id;
			}
			set
			{
				if ((this._dentista_id != value))
				{
					if (this._dentista.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Ondentista_idChanging(value);
					this.SendPropertyChanging();
					this._dentista_id = value;
					this.SendPropertyChanged("dentista_id");
					this.Ondentista_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tratamento_id", DbType="Int NOT NULL")]
		public int tratamento_id
		{
			get
			{
				return this._tratamento_id;
			}
			set
			{
				if ((this._tratamento_id != value))
				{
					if (this._tratamento.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Ontratamento_idChanging(value);
					this.SendPropertyChanging();
					this._tratamento_id = value;
					this.SendPropertyChanged("tratamento_id");
					this.Ontratamento_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="atendimento1_receita", Storage="_receitas", ThisKey="id", OtherKey="atendimento_id")]
		public EntitySet<receita> receitas
		{
			get
			{
				return this._receitas;
			}
			set
			{
				this._receitas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="atendimento1_itemAtendimento", Storage="_itemAtendimentos", ThisKey="id", OtherKey="atendimento_id")]
		public EntitySet<itemAtendimento> itemAtendimentos
		{
			get
			{
				return this._itemAtendimentos;
			}
			set
			{
				this._itemAtendimentos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dentista_atendimento1", Storage="_dentista", ThisKey="dentista_id", OtherKey="pessoa_id", IsForeignKey=true)]
		public dentista dentista
		{
			get
			{
				return this._dentista.Entity;
			}
			set
			{
				dentista previousValue = this._dentista.Entity;
				if (((previousValue != value) 
							|| (this._dentista.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._dentista.Entity = null;
						previousValue.atendimentos.Remove(this);
					}
					this._dentista.Entity = value;
					if ((value != null))
					{
						value.atendimentos.Add(this);
						this._dentista_id = value.pessoa_id;
					}
					else
					{
						this._dentista_id = default(int);
					}
					this.SendPropertyChanged("dentista");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tratamento_atendimento1", Storage="_tratamento", ThisKey="tratamento_id", OtherKey="avaliacao_id", IsForeignKey=true)]
		public tratamento tratamento
		{
			get
			{
				return this._tratamento.Entity;
			}
			set
			{
				tratamento previousValue = this._tratamento.Entity;
				if (((previousValue != value) 
							|| (this._tratamento.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tratamento.Entity = null;
						previousValue.atendimentos.Remove(this);
					}
					this._tratamento.Entity = value;
					if ((value != null))
					{
						value.atendimentos.Add(this);
						this._tratamento_id = value.avaliacao_id;
					}
					else
					{
						this._tratamento_id = default(int);
					}
					this.SendPropertyChanged("tratamento");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_receitas(receita entity)
		{
			this.SendPropertyChanging();
			entity.atendimento = this;
		}
		
		private void detach_receitas(receita entity)
		{
			this.SendPropertyChanging();
			entity.atendimento = null;
		}
		
		private void attach_itemAtendimentos(itemAtendimento entity)
		{
			this.SendPropertyChanging();
			entity.atendimento = this;
		}
		
		private void detach_itemAtendimentos(itemAtendimento entity)
		{
			this.SendPropertyChanging();
			entity.atendimento = null;
		}
	}
}
#pragma warning restore 1591
